syntax = "proto3";

option java_package = "com.example.hivemindworker.proto";
option java_multiple_files = true;

// 用戶服務
service UserService {
    // 登入
    rpc Login(LoginRequest) returns (LoginResponse);
    
    // 獲取餘額
    rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse);
}

// 節點管理服務
service NodeManagerService {
    // 註冊工作節點
    rpc RegisterWorkerNode(RegisterWorkerNodeRequest) returns (RegisterWorkerNodeResponse);
    
    // 報告狀態
    rpc ReportStatus(ReportStatusRequest) returns (ReportStatusResponse);
}

// 主節點服務
service MasterNodeService {
    // 存儲日誌
    rpc StoreLogs(StoreLogsRequest) returns (StoreLogsResponse);
}

// 登入請求
message LoginRequest {
    string username = 1;
    string password = 2;
}

// 登入響應
message LoginResponse {
    bool success = 1;
    string token = 2;
    string message = 3;
}

// 獲取餘額請求
message GetBalanceRequest {
    string username = 1;
    string token = 2;
}

// 獲取餘額響應
message GetBalanceResponse {
    bool success = 1;
    int32 balance = 2;
    string message = 3;
}

// 註冊工作節點請求
message RegisterWorkerNodeRequest {
    string node_id = 1;
    string hostname = 2;
    int32 cpu_cores = 3;
    float memory_gb = 4;
    int32 cpu_score = 5;
    int32 gpu_score = 6;
    string gpu_name = 7;
    float gpu_memory_gb = 8;
    string location = 9;
    int32 port = 10;
}

// 註冊工作節點響應
message RegisterWorkerNodeResponse {
    bool success = 1;
    string message = 2;
}

// 報告狀態請求
message ReportStatusRequest {
    string node_id = 1;
    string status_message = 2;
}

// 報告狀態響應
message ReportStatusResponse {
    bool success = 1;
    string message = 2;
}

// 存儲日誌請求
message StoreLogsRequest {
    string node_id = 1;
    string task_id = 2;
    string logs = 3;
    int64 timestamp = 4;
}

// 存儲日誌響應
message StoreLogsResponse {
    bool success = 1;
    string message = 2;
}